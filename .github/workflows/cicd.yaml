# name: cicd

# on:
#   push:
#       branches: [main]

# jobs:

  # ! before testing the CI/CD pipeline:
  # ! 1. `gcloud compute ssh VM_NAME --zone=ZONE` to create SSH keys, this will allow you to access the VM, the you can exit it
  # ! 2. write down the location of the PRIVATE key (not the one ending with `.pub`)
  # ! 3. TO RUN ON YOUR LOCAL MACHINE => `eval "$(ssh-agent -s)" && ssh-add google_compute_engine` => this tells the SSH agent on your machine that you acting as X
  # ! 4. `ssh USERNAME@IP_ADRESS` (you can get your username with `gcloud compute ssh` command from within the VM) 

#   gcp-vm-sysadmin:
#     name: gcp-vm-sysadmin
#     runs-on: ubuntu-latest
#     steps:
#     - name: sysadmin ops on GCP VM
#       uses: appleboy/ssh-action@v1.0.1
#       env:
#         DEBIAN_FRONTEND: "noninteractive"
#       with:
#         # should be the IP address of your VM
#         host: ${{ secrets.SSH_HOST }}
#         key: ${{ secrets.SSH_PRIV_KEY }}
#         port: 22
#         username: root
#         script_stop: true
#         # all the commands you see after the `|` will be executed in the remote machine
#         script: |
#             cd /var/www/html
#             touch test.txt
#             echo "I WAS UPDATED" > test.txt
